esphome:
  name: p1sn-01
  friendly_name: P1SN-01

esp32:
  board: esp32-c3-devkitm-1
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "tbykU7lHYETc8xScEmVLSVba6MrHiWPb00+g2d30I4c="

mqtt:
  broker: 192.168.0.162
  username: !secret mqtt_user
  password: !secret mqtt_password 

ota:
  password: "191842e63611f4c388d1ab947bf25c3c"

wifi:
  networks:
  - ssid: !secret wifi_ssid
    password: !secret wifi_password
  # - ssid: !secret wifi_ssid1
  #   password: !secret wifi_password1
  # - ssid: !secret wifi_ssid2
  #   password: !secret wifi_password2

  ap:
    ssid: "P1Sm-01 Fallback Hotspot"
    password: "Oy0dBlYy8WRj"

captive_portal:

i2c:
  sda: 6
  scl: 7

sensor:
  - platform: bme280
    temperature:
      name: "Temperature"
      id: "SM01_T"
    pressure:
      name: "Pressure"
    humidity:
      name: "Humidity"
      id: "SM01_H"
    address: 0x76
    update_interval: 60s

  - platform: bh1750
    name: "illuminance"
    address: 0x23
    update_interval: 60s

  - platform: template
    name: "Vapor Pressure Deficit(kPa)"
    unit_of_measurement: "kPa"
    device_class: PRESSURE
    update_interval: 60s
    lambda: |-
      auto e = 2.71828;
      auto T = id(SM01_T).state;
      auto RH = id(SM01_H).state;
      auto SVP = 0.61078 * pow(e, (17.2694 * T / (T + 238.3)));
      auto VPD = ((100-RH) / 100) * SVP;
      return VPD;
    
  - platform: wifi_signal
    name: p1sm-01 WiFi Signal
    update_interval: 60s

  - platform: uptime
    name: p1sm-01 Uptime
    filters:
      - lambda: return x / 60.0;
    unit_of_measurement: min
    update_interval: 60s

  - platform: adc
    pin: 2
    name: "Battery Voltage"
    id: SM01_BV
    unit_of_measurement: "v"
    device_class: VOLTAGE
    update_interval: 60s
    attenuation: 11db
    filters:
    - multiply: 2.0

  - platform: template
    name: "Battery Life"
    unit_of_measurement: "%"
    device_class: BATTERY
    update_interval: 60s
    lambda: return id(SM01_BV).state;
    filters:
    - calibrate_polynomial:
        degree: 4
        datapoints:
        - 3.4 ->  0.0
        - 3.6 ->  8.43
        - 3.81 ->  50.06
        - 3.86 ->  57.63
        - 3.92 ->  72.56
        - 3.96 ->  90.96
        - 4.05 ->  100
    - lambda: |
        if (x < 0) return 0; 
        else if (x > 100) return 100;
        else return (x);